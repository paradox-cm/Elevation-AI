Cursor Prompt —

// FILE: HomeKnowledgeBlocks.tsx — Homepage 1 (Knowledge Blocks · Concept A)

Objective
Render a 600×360 infographic showing a 3×3 field of “knowledge tiles” that snap into a connected graph. Real but generic micro-UI; no sensitive/vendor data.

Instructions for Cursor

Canvas: fixed 600×360, outer padding 12px.

Title strip: top, left-aligned; reserve 36px height.

Heading: “Knowledge Blocks”

Subtext: “Live knowledge graph from your private data”

Grid: centered below title; 3×3 tiles, each 160×90, gaps 12px both axes.

Tile contents (use DS Card, Text, Chip/Badge; single-line truncation where needed):

Document — title: “Q3 Strategy Draft…”, chips: Entity: Company, Topic: Strategy

Email — subject: “Renewal terms follow-up”, right timestamp chip: “Yesterday”

Meeting Notes — 2 bullet lines (truncate ~24–28 chars)

Metric — row: ARR — 12.4M (mono), subtext “source: Finance”

Task — “Prepare renewal brief”, status chip: “Open” (right)

Ticket — “Access request pending”, badge: “IT” (right)

Contract — two fields: Vendor, Renewal Date: Oct 15

Call Transcript — “Key risks discussed…”

FAQ — “What’s the policy on…”, entity chip: “Policy”

Graph overlay: inline SVG under tile content; connectors with rounded caps; node dots 4–6px at tile edge touchpoints.

Connect: (2↔7), (1↔3), (4↔5), (3↔5).

Interactions/Animation:

On mount: tile scale 0.96 → 1.0, stagger 60ms, order TL→BR.

After tiles: stroke-draw each connection (~500ms, stagger 120ms).

Hover at any edge endpoint: tooltip “Connected: [Tile A] ↔ [Tile B]”.

Typography & spacing: chips use 4px inline gaps; internal card paddings 8px.

// FILE: HomeAgenticEngine.tsx — Homepage 2 (Agentic Engine · Concept A)

Objective
Show a secure orchestration lane demonstrating planning, tool/model calls, redaction policy, and return—without implying external vendors.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px height.

Heading: “Agentic Engine”

Subtext: “Secure orchestration from plan to policy-governed execution”

Left orchestrator rail: fixed width 120px.

Sections (stacked): Tools, Models, Policies.

Tools: rows “Summarizer”, “Retriever”, “Notifier”.

Models: rows “Model A”, “Model B”, “Model C”.

Policies: 2 compact toggles — “PII Masking”, “Rate Limits”.

Main flow lane: fills remaining width; one horizontal row of 6 step cards, each 90×48, gaps 12px; arrows between cards.

Fetch Context

Plan

Call: Summarizer

Call: Retrieval

Redact

Return

Each step shows two tiny metric pills: latency 120ms, cost 0.3 (static placeholders, vary slightly across cards).

Policy tag: small pill centered above the “Redact” card: “Policy: PII Masking ON”.

Animation:

Request token (8px circle) travels card-to-card; dwell ~450ms each.

When over “Redact”: brief overlay “Sensitive tokens masked”.

Hover: step popover with 2 lines: Inputs: …, Outputs: ….

Layout rhythm: internal card padding 8px; inline gaps 4px.

// FILE: HomeWorkspaces.tsx — Homepage 3 (Workspaces & Canvases · Concept B)

Objective
Kanban-style board where each card is context-aware and offers quick actions; neutral copy.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Workspaces & Canvases”

Subtext: “Context-rich execution with shared understanding”

Header bar (under title): left “Workspace: Atlas”; right 3 avatars + “Add Canvas”.

Board: 3 equal columns labeled “Inbox”, “In Progress”, “Done”; 12px column gutters.

Smart Card: 160×70, vertical gap 8px; 3 cards per column.

Structure:

Title (1 line) e.g., “Renewal Brief”

Context chips row (2–3 chips: Entity: Vendor, Doc link)

Excerpt line: “Last note: …” (truncate)

Footer: 3 small icons (Summarize / Create Follow-up / Attach Flow)

Interaction:

Drag card → destination column’s related cards get a soft glow.

On drop: toast “Context linked (+1)”.

Spacing: card padding 8px; chips gap 4px.

// FILE: HomeCopilot.tsx — Homepage 4 (Personal Co-pilot · Concept A)

Objective
Chat panel with an answer card plus an adjacent actions tray that auto-prefills based on context.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Personal Co-pilot”

Subtext: “Answers and actions in one place”

Layout: inner width 576.

Left chat pane 336px wide; right actions tray 228px; gutter 12px.

Chat pane:

Input at bottom: placeholder “Ask across your universe…”.

Conversation area with 2 bubbles:

User: short question.

Assistant: Answer Card (framed)

Title “Answer”

Body: 2 short lines

Citation chips: “Doc”, “Email”, “Note”

Actions tray:

Header “Suggested Actions”

3 action cards, full-width, 64px height:

“Create Task” (prefilled “Renewal brief”)

“Draft Email” (prefilled “Follow-up on terms”)

“Generate Summary”

Each card: primary “Confirm” button (right).

Animation: after answer renders, first action slides in (~200ms).

Toast on Confirm: “Action queued”.

// FILE: HomeSecurity.tsx — Homepage 5 (Enterprise Security · Concept A)

Objective
Auditable activity timeline with filters and masked values; neutral strings.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Enterprise Security”

Subtext: “Encryption, auditability, and control”

Top filter row: 4 filter chips — “User”, “Policy”, “Resource”, “Outcome” — plus “Export” button (right).

Timeline table (left block ~420px** width):**

Row height 28px; 4–5 rows.

Column widths: Time 60, User 70, Action 110, Resource 110, Policy 60, Outcome 50.

Sample rows with masked values {redacted} when appropriate.

Right panel: “Evidence Pack” button + brief explainer text (“Every action is logged. Sensitive values visible only with permission.”).

Interactions:

Clicking “Policy” filter narrows to rows including “PII Masking” (simulated).

Hover masked cell → lock icon + tooltip “Requires permission”.

// FILE: PlatformPrivateBrain.tsx — Platform 1 (Your Company’s Private Brain · Concept A)

Objective
Three-stage pipeline from sources → extraction → knowledge graph.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Your Company’s Private Brain”

Subtext: “Real-time knowledge extraction, unification, and mapping”

Three columns with headers “Sources”, “Extraction”, “Knowledge Graph”; gaps 12px.

Sources: stack 4 compact cards (Doc, Email, Meeting, Ticket) each with a 1-line snippet.

Extraction: table-like panel with 3 rows: Entity, Relation, Attribute.

Each row shows example entries and a compact confidence bar (e.g., 0.82).

Right side of each row: Approve / Correct chips (non-functional).

Graph: mini SVG graph (6–8 nodes, 8–10 edges) with labels on 3 nodes: “Company”, “Contract”, “Renewal”.

Arrows: thin connectors from each source card to the Extraction column; one consolidated arrow from Extraction to Graph.

Animation: on mount, an Email snippet highlights → related entities light in Extraction → edge draws between “Company” and “Contract”.

// FILE: PlatformWorkspaces.tsx — Platform 2 (A Place to Work · Concept A · aligns with Home 3)

Objective
Workspace overview that echoes “smart cards” from Home, adding operational widgets and presence.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “A Place to Work”

Subtext: “Collaborative workspaces, automation, and real-time context”

Left sidebar: fixed 120px, header “Workspaces”, list of 4 (Atlas selected).

Main panel (uses 12px gutters):

Top bar: “Atlas Workspace” + 3 presence avatars + buttons: “Open Pipeline”, “Start Flow”.

Row 1 — Dashboard widgets: 3 cards, each ~176×70 (1/3 width minus gutters):

Live Task Queue — big count (e.g., 7) + 2 tiny task chips

Canvas Gallery — thumbnails: Doc / Pipeline / Flow

Linked Knowledge Entities — count + chips: Company / Contract / Date

Row 2 — Board preview: 3 smart cards at 140×60, mirroring Home 3 structure (title, chips, excerpt).

Interaction: switching selected workspace updates counts/titles (simulated). Presence dots gently pulse.

// FILE: PlatformConnectSecurely.tsx — Platform 3 (Connect to the World of AI, Securely · Concept A)

Objective
Routing rules + live request stream with an explicit policy gate; neutral, vendor-agnostic.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Connect to the World of AI, Securely”

Subtext: “Single integration, governed access, cost-aware routing”

Top table: “Routing Rules” — height 140px, full width.

Columns: Condition | Action | Model/Tool | Policy.

Rows (4):

Task = “Summarize” → Route → Model A → PII Masking

Retrieval Needed = true → Route → Retriever → Cache

Cost > threshold → Route → Model B → Optimize Cost

Data Residency = EU → Route → Model C → EU Only

Divider.

Bottom: Live Requests

Left: list of 6 compact request rows with matched-rule chips.

Right: vertical Policy Gate card with tags: De-ID, Rate Limit, Audit.

Animation: simulate a request entering, show matched chips, move through the Policy Gate, end with status “Completed”.

// FILE: PlatformLibrary.tsx — Platform 4 (Your Arsenal of Reusable Intelligence · Concept C)

Objective
Flow Template Gallery with a preview drawer to reuse/copy flows.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Your Arsenal of Reusable Intelligence”

Subtext: “Templates for prompts, flows, and agents”

Grid: 3 columns × 2 rows; card 180×90, gaps 12px.

Each card:

Flow name (short; e.g., “Data Cleanup”, “Weekly Digest”, “Deal Review”, etc.)

Mini node-graph thumbnail (4–5 nodes)

Metadata row: owner initials, “Last used 3d”, “Ver 1.3”

Right drawer: width 180px when open; shows:

Title (flow name), parameters (key/value rows), buttons “Clone” and “Use Template”, dropdown “Presets”, list “Dependencies (3)”.

Interactions: click card → open drawer; clicking “Use Template” briefly overlays a new flow canvas (non-functional snap animation).

// FILE: PlatformCommandCenter.tsx — Platform 5 (Your Conversational Command Center · Concept A)

Objective
Three-pane “Ask / See / Do” cockpit: chat history, rich answer with entities/citations, and actionable queue.

Instructions for Cursor

Canvas: 600×360, 12px padding.

Title strip: 36px high.

Heading: “Your Conversational Command Center”

Subtext: “Ask, inspect context, and trigger workflows”

Three-pane layout (inner width 576; gutters 8px):

Ask (left): 160px width; list 4 chat items + input at bottom.

See (center): 240px width; Answer Card with 2–3 sentences, Entities chip row (Company, Contract, Date), Citations chip row (Doc, Email, Notes).

Do (right): 160px width; 3 action items each with “Run” button.

Interactions:

Sending a query updates the center answer; one action auto-adds to “Do” (slide-in).

Clicking “Run” shows mini progress then a tick.

Spacing: internal paddings 8px; chip gaps 4px.

Shared Implementation Notes (applies to all files)

Use your design system primitives. Keep strings short; truncate where specified.

Respect prefers-reduced-motion for all animations.

All content must remain generic and vendor-agnostic; no speculative features.

Each component exports a default React component and accepts className?: string.


------
Notes for Cursor on Common Implementation

Use your design system’s primitives (Container, Card, Text, Chip/Badge, Button, Avatar, Tooltip, Drawer, Tabs as needed). Keep spacing consistent: 24px outer layout gutters, 16px internal card paddings, 8px between inline chips.

Typography: concise headings (one line), supporting text limited to 1–2 short lines to avoid wrapping.

Icons: use neutral placeholders (generic document, email, chat, graph, gear) to avoid implying specific external vendors.

Animations: keep loops 4–8s, easing standard; ensure users can read content while animations run (staggered entrances, simple motion along defined paths).

Accessibility: ensure focus states for interactive elements; tooltips on hover only augment, never block.