<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Risk Management Animation</title>
    <style>
        body {
            margin: 0;
            background: #0D0D0C;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        canvas {
            display: block;
            width: 600px;
            height: 600px;
        }
    </style>
</head>
<body>
    <canvas id="riskCanvas" width="600" height="600"></canvas>
    <script>
        const canvas = document.getElementById("riskCanvas");
        const ctx = canvas.getContext("2d");
        canvas.width = 600;
        canvas.height = 600;

        const maze = [
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            [1, 0, 1, 0, 1, 0, 1, 1, 0, 1],
            [1, 0, 1, 0, 0, 0, 1, 0, 0, 1],
            [1, 0, 1, 1, 1, 0, 1, 1, 0, 1],
            [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
            [1, 1, 1, 0, 1, 1, 1, 1, 0, 1],
            [1, 0, 0, 0, 0, 0, 0, 1, 0, 1],
            [1, 0, 1, 1, 1, 1, 0, 0, 0, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
        ];

        const tileSize = 60;
        let dot = { x: 1, y: 1, size: 8 };
        let path = [{ x: 1, y: 1 }];

        function drawMaze() {
            ctx.fillStyle = "#D5D6D2";
            for (let row = 0; row < maze.length; row++) {
                for (let col = 0; col < maze[row].length; col++) {
                    if (maze[row][col] === 1) {
                        ctx.fillRect(col * tileSize, row * tileSize, tileSize, tileSize);
                    }
                }
            }
        }

        function drawDot() {
            ctx.beginPath();
            ctx.arc(dot.x * tileSize + tileSize / 2, dot.y * tileSize + tileSize / 2, dot.size, 0, Math.PI * 2);
            ctx.fillStyle = "#33FF57";
            ctx.fill();
        }

        function moveDot() {
            const directions = [
                { x: 0, y: -1 }, { x: 1, y: 0 }, { x: 0, y: 1 }, { x: -1, y: 0 }
            ];
            
            for (let dir of directions) {
                let newX = dot.x + dir.x;
                let newY = dot.y + dir.y;
                if (maze[newY] && maze[newY][newX] === 0 && !path.some(p => p.x === newX && p.y === newY)) {
                    dot.x = newX;
                    dot.y = newY;
                    path.push({ x: newX, y: newY });
                    return;
                }
            }
            
            path = [{ x: 1, y: 1 }];
            dot.x = 1;
            dot.y = 1;
        }

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawMaze();
            moveDot();
            drawDot();
            setTimeout(() => requestAnimationFrame(animate), 500);
        }

        animate();
    </script>
</body>
</html>

